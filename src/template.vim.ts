// シンタックスハイライト用
const vim = String.raw;

const templateVim = vim`
" This file is generated by cellwidths_gen
if exists('g:cellwidths_gen_NONCE')
  finish
endif
let g:cellwidths_gen_NONCE = 1
if !exists('g:cellwidths_gen_current')
  let g:cellwidths_gen_current = 'none'
endif
if !exists('g:cellwidths_gen_disable_auto_switch')
  let g:cellwidths_gen_disable_auto_switch = 0
endif
let s:cellwidths = json_decode("JSON")
augroup cellwidths_gen_NONCE
  autocmd!
  autocmd OptionSet guifont call s:update_cellwidths()
augroup END

let s:font_name = 'FONT_NAME'
function! s:update_cellwidths() abort
  if !g:cellwidths_gen_disable_auto_switch && g:cellwidths_gen_current != 'NONCE' && &guifont =~ '\(^\|,\)' . s:font_name . '\(:\| [0-9]\+\)'
    let g:cellwidths_gen_current = 'NONCE'
    call setcellwidths(s:cellwidths)
  endif
endfunction
call s:update_cellwidths()

if !exists('g:cellwidths_gen_all')
  let g:cellwidths_gen_all = {}

  function! s:find_and_set_cellwidths(name) abort
    if !has_key(g:cellwidths_gen_all, a:name)
      echoerr 'Cellwidths for ' . a:name . ' not found.'
      return
    endif
    let cellwidths = g:cellwidths_gen_all[a:name]['cellwidths']
    call setcellwidths(cellwidths)
    echo 'Cellwidths set for ' . a:name
  endfunction

  command! -nargs=1 CellwidthsGenApply call s:find_and_set_cellwidths(<q-args>)
endif
let g:cellwidths_gen_all['FONT_NAME'] = {
  \   'nonce': 'NONCE',
  \   'cellwidths': s:cellwidths,
  \   'font_name': s:font_name,
  \   'current': g:cellwidths_gen_current,
  \ }
`;
export default templateVim;
